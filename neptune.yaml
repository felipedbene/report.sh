AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Neptune Stack with VPC for SSO Graph Analysis'

Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: dev

  NeptuneInstanceClass:
    Description: Neptune instance class
    Type: String
    Default: db.r5.large
    AllowedValues:
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-vpc

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-public-1
  # IAM Role for Neptune Load
NeptuneLoadRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: !Sub ${EnvironmentName}-neptune-load-role
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: neptune-db.amazonaws.com
          Action: sts:AssumeRole
    ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSNeptuneFullAccess
    Policies:
      - PolicyName: S3Access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:Get*
                - s3:List*
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-public-2

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.11.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-private-1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.12.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-private-2

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-public-rt

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # NAT Gateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-nat

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-private-rt

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # Neptune Subnet Group
  NeptuneSubnetGroup:
    Type: AWS::Neptune::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Neptune database
      SubnetIds: 
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  # Neptune Security Group
  NeptuneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Neptune database
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8182
          ToPort: 8182
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-neptune-sg

  # Neptune Parameter Group
  NeptuneClusterParameterGroup:
    Type: AWS::Neptune::DBClusterParameterGroup
    Properties:
      Family: neptune1
      Description: Neptune cluster parameter group
      Parameters:
        neptune_enable_audit_log: '1'

  # Neptune Instance Parameter Group
  NeptuneInstanceParameterGroup:
    Type: AWS::Neptune::DBParameterGroup
    Properties:
      Family: neptune1
      Description: Neptune instance parameter group
      Parameters: {}

  # Neptune Cluster
  NeptuneCluster:
    Type: AWS::Neptune::DBCluster
    Properties:
      DBClusterIdentifier: !Sub ${EnvironmentName}-sso-graph
      DBClusterParameterGroupName: !Ref NeptuneClusterParameterGroup
      DBSubnetGroupName: !Ref NeptuneSubnetGroup
      VpcSecurityGroupIds:
        - !Ref NeptuneSecurityGroup
      Port: 8182
      IamAuthEnabled: true
      EnableCloudwatchLogsExports:
        - audit

  # Neptune Primary Instance
  NeptunePrimaryInstance:
    Type: AWS::Neptune::DBInstance
    Properties:
      DBInstanceClass: !Ref NeptuneInstanceClass
      DBClusterIdentifier: !Ref NeptuneCluster
      DBParameterGroupName: !Ref NeptuneInstanceParameterGroup
      AutoMinorVersionUpgrade: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-sso-graph-primary

  # IAM Role for Neptune Load
  NeptuneLoadRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-neptune-load-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: neptune.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSNeptuneFullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                  - arn:aws:s3:::mc-a182428597156-internal-us-east-1
                  - arn:aws:s3:::mc-a182428597156-internal-us-east-1/*

  # VPC Endpoint for S3
  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - arn:aws:s3:::mc-a182428597156-internal-us-east-1
              - arn:aws:s3:::mc-a182428597156-internal-us-east-1/*
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC


Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  PrivateSubnet1:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1

  PrivateSubnet2:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2

  NeptuneClusterEndpoint:
    Description: Neptune cluster endpoint
    Value: !GetAtt NeptuneCluster.Endpoint
    Export:
      Name: !Sub ${AWS::StackName}-ClusterEndpoint

  NeptuneClusterReadEndpoint:
    Description: Neptune cluster read endpoint
    Value: !GetAtt NeptuneCluster.ReadEndpoint
    Export:
      Name: !Sub ${AWS::StackName}-ClusterReadEndpoint

  NeptuneClusterPort:
    Description: Neptune cluster port
    Value: !GetAtt NeptuneCluster.Port
    Export:
      Name: !Sub ${AWS::StackName}-ClusterPort

  NeptuneLoadRoleArn:
    Description: IAM role ARN for Neptune Loader
    Value: !GetAtt NeptuneLoadRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-LoadRoleArn

  NeptuneSecurityGroupId:
    Description: Security group ID for Neptune cluster
    Value: !Ref NeptuneSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupId
